---------------------------------------
git ignore

ignore pattern
https://linuxize.com/post/gitignore-ignoring-files-in-git/

Slash
The slash symbol (/) represents a directory separator. The slash at the beginning of a pattern is relative to the directory where the .gitignore resides.
If the pattern starts with a slash, it matches files and directories only in the repository root.

If the pattern doesnâ€™t start with a slash, it matches files and directories in any directory or subdirectory.

If the pattern ends with a slash, it matches only directories. When a directory is ignored, all of its files and subdirectories are also ignored.
------------------------------------------------------------------------------------------------------

https://www.atlassian.com/git/tutorials/saving-changes/gitignore
https://firedev.com/posts/git-ignore-deleted-files/
git update-index --assume-unchanged .ruby-version
git update-index --no-assume-unchanged src/app/etc/di.xml
git update-index --no-assume-unchanged src/app/etc/env.php
git update-index --no-assume-unchanged src/vendor/magento/magento2-base/app/etc/di.xml

////////////////////////
set files in dir
1. cd into the folder you want to assume is unchanged
2. git update-index --assume-unchanged $(git ls-files | tr '\n' ' ')
////////////////////////

----------------------------
   undo the the last commit
   git reset HEAD~1
   git log
   git push origin main --force
----------------------------   
----------------------------
git save user and password
https://stackoverflow.com/questions/35942754/how-to-save-username-and-password-in-git

You can use the git config to enable credentials storage in git.

1.git config --global credential.helper store
2. git pull [enter the user and password]
3. git pull

-------------------------------
rever it back to original state
git add .
git reset --hard
-------------------------------

----------------------
git remote -v
git remote add origin ...
git remote set-url origin ...
	------------ setting by tokens ------------
	https://github.com/settings/tokens
	git remote add origin https://[USERNAME]:[NEW TOKEN]@github.com/[USERNAME]/[REPO].git
	git remote set-url origin https://adeelgodhot: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@github.com/adeelgodhot/personal_data.git
	git remote set-url origin https://adeelgod@bitbucket.org/lcarbshop/hermes.git

https://docs.github.com/en/github/getting-started-with-github/managing-remote-repositories
----------------------
	git status is so slow
	https://github.com/romkatv/powerlevel10k/issues/39
	
gitstatus_query POWERLEVEL9K && set | egrep '^VCS_STATUS'

----------------------------------------------------------------------------
git The remote end hung up unexpectedly while git cloning

https://stackoverflow.com/questions/6842687/the-remote-end-hung-up-unexpectedly-while-git-cloning

	>>>>>>>>>>>>>>>>>>>>>>>
	git config --global http.postBuffer 2048M
	git config --global http.maxRequestBuffer 1024M
	git config --global core.compression 9

	git config --global ssh.postBuffer 2048M
	git config --global ssh.maxRequestBuffer 1024M

	git config --global pack.windowMemory 256m 
	git config --global pack.packSizeLimit 256m
	>>>>>>>>>>>>>>>>>>>>>>>
	
--------------------------------------
git status so slow

git status --ignore-submodules=all

-------------------------------------
access token 

https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token


---------------------
Goal: 
  a. create new commit of current changes in local
  b. pull commits from remote to local and append the newly created commit above to pulled commits from remote.
  
git pull origin develop_new --rebase

 conflicts occurs:
	here is how to fix it.
		git add .
		git rebase --continue
		
----------------------
cancel git add .
    git reset --hard

----------------------
remove remote commit from git

git reset HEAD~2
git add .
git reset --hard
git push origin main --force

----------------------------	
	How do I make Git ignore file mode (chmod) changes?
	
	git config core.fileMode false
	
---------------------------
how to change commit author for already commited 
https://confluence.atlassian.com/bitbucketserverkb/how-do-you-make-changes-on-a-specific-commit-779171729.html
git commit --amend -C HEAD --reset-author
git commit --amend --author="orce-mage"

git filter-branch --env-filter '
WRONG_EMAIL="adeelgod@hotmail.com"
NEW_NAME="orce-mage"
NEW_EMAIL="nikolovorce2@gmail.com"

if [ "$GIT_COMMITTER_EMAIL" = "$WRONG_EMAIL" ]
then
    export GIT_COMMITTER_NAME="$NEW_NAME"
    export GIT_COMMITTER_EMAIL="$NEW_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$WRONG_EMAIL" ]
then
    export GIT_AUTHOR_NAME="$NEW_NAME"
    export GIT_AUTHOR_EMAIL="$NEW_EMAIL"
fi
' --tag-name-filter cat -- --branches --tags
------------------------------------
"Out of memory - malloc failed"

In .git/config file
[pack]
threads = 1
deltaCacheSize = 128m
packSizeLimit = 128m
windowMemory = 128m
[core]
packedGitLimit = 128m
packedGitWindowSize = 128m

resolves this issue.

----------------------------
git config http.postBuffer 4294967296
git config http.postBuffer 3221225472
git config http.postBuffer 3865470566
git config http.postBuffer 3650722201

--------------------------
git clone --mirror https://github.com/mage-oc-star/CalvoCover.git
java -jar bfg.jar --strip-blobs-bigger-than 50M CalvoCover.git

--------------------
create branch

git branch {b}
git checkout -b {b}

---------------------
How to Delete a Local Branch in Git

	git branch -d  local_branch_name
	
	git branch -D local_branch_name
		The -D flag, with a capital D (which is an alias for -- delete --force), forcefully deletes the local branch, regradless of its merged status.

---------------------
How to Delete a Remote Branch in Git

	git push remote_name -d remote_branch_name
	
---------------------
To view any remote branches, you use this command:

	git branch -a
	
-------------------------

git checkout staging
git cherry-pick [commit_number]
-------------------------
git ignore
https://www.atlassian.com/git/tutorials/saving-changes/gitignore

/app/*/ means allowing the only directories just under app folder. like app/etc, app/code, app/design, but not files.
app/code/**
it allows all files under code directory.

to select vendor: 
	/vendor
	/vendor/**
	only "/vendor/**" doesn't work because the point cannot cross against vendor.